// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chacomm.proto

package chacomm

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Message struct {
	// Types that are valid to be assigned to Packet:
	//	*Message_Chunkstart
	//	*Message_Chunkdata
	//	*Message_Pollquery
	Packet               isMessage_Packet `protobuf_oneof:"packet"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_chacomm_bfadd81b739bb8fc, []int{0}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (dst *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(dst, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

type isMessage_Packet interface {
	isMessage_Packet()
}

type Message_Chunkstart struct {
	Chunkstart *ChunkStart `protobuf:"bytes,1,opt,name=chunkstart,proto3,oneof"`
}

type Message_Chunkdata struct {
	Chunkdata *ChunkData `protobuf:"bytes,2,opt,name=chunkdata,proto3,oneof"`
}

type Message_Pollquery struct {
	Pollquery *PollQuery `protobuf:"bytes,3,opt,name=pollquery,proto3,oneof"`
}

func (*Message_Chunkstart) isMessage_Packet() {}

func (*Message_Chunkdata) isMessage_Packet() {}

func (*Message_Pollquery) isMessage_Packet() {}

func (m *Message) GetPacket() isMessage_Packet {
	if m != nil {
		return m.Packet
	}
	return nil
}

func (m *Message) GetChunkstart() *ChunkStart {
	if x, ok := m.GetPacket().(*Message_Chunkstart); ok {
		return x.Chunkstart
	}
	return nil
}

func (m *Message) GetChunkdata() *ChunkData {
	if x, ok := m.GetPacket().(*Message_Chunkdata); ok {
		return x.Chunkdata
	}
	return nil
}

func (m *Message) GetPollquery() *PollQuery {
	if x, ok := m.GetPacket().(*Message_Pollquery); ok {
		return x.Pollquery
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Message) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Message_OneofMarshaler, _Message_OneofUnmarshaler, _Message_OneofSizer, []interface{}{
		(*Message_Chunkstart)(nil),
		(*Message_Chunkdata)(nil),
		(*Message_Pollquery)(nil),
	}
}

func _Message_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Message)
	// packet
	switch x := m.Packet.(type) {
	case *Message_Chunkstart:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Chunkstart); err != nil {
			return err
		}
	case *Message_Chunkdata:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Chunkdata); err != nil {
			return err
		}
	case *Message_Pollquery:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Pollquery); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Message.Packet has unexpected type %T", x)
	}
	return nil
}

func _Message_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Message)
	switch tag {
	case 1: // packet.chunkstart
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ChunkStart)
		err := b.DecodeMessage(msg)
		m.Packet = &Message_Chunkstart{msg}
		return true, err
	case 2: // packet.chunkdata
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ChunkData)
		err := b.DecodeMessage(msg)
		m.Packet = &Message_Chunkdata{msg}
		return true, err
	case 3: // packet.pollquery
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PollQuery)
		err := b.DecodeMessage(msg)
		m.Packet = &Message_Pollquery{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Message_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Message)
	// packet
	switch x := m.Packet.(type) {
	case *Message_Chunkstart:
		s := proto.Size(x.Chunkstart)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_Chunkdata:
		s := proto.Size(x.Chunkdata)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Message_Pollquery:
		s := proto.Size(x.Pollquery)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ChunkStart struct {
	Nonce                []byte   `protobuf:"bytes,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Chunkid              int32    `protobuf:"varint,2,opt,name=chunkid,proto3" json:"chunkid,omitempty"`
	Chunksize            int32    `protobuf:"varint,3,opt,name=chunksize,proto3" json:"chunksize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChunkStart) Reset()         { *m = ChunkStart{} }
func (m *ChunkStart) String() string { return proto.CompactTextString(m) }
func (*ChunkStart) ProtoMessage()    {}
func (*ChunkStart) Descriptor() ([]byte, []int) {
	return fileDescriptor_chacomm_bfadd81b739bb8fc, []int{1}
}
func (m *ChunkStart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChunkStart.Unmarshal(m, b)
}
func (m *ChunkStart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChunkStart.Marshal(b, m, deterministic)
}
func (dst *ChunkStart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChunkStart.Merge(dst, src)
}
func (m *ChunkStart) XXX_Size() int {
	return xxx_messageInfo_ChunkStart.Size(m)
}
func (m *ChunkStart) XXX_DiscardUnknown() {
	xxx_messageInfo_ChunkStart.DiscardUnknown(m)
}

var xxx_messageInfo_ChunkStart proto.InternalMessageInfo

func (m *ChunkStart) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *ChunkStart) GetChunkid() int32 {
	if m != nil {
		return m.Chunkid
	}
	return 0
}

func (m *ChunkStart) GetChunksize() int32 {
	if m != nil {
		return m.Chunksize
	}
	return 0
}

type ChunkData struct {
	Chunkid              int32    `protobuf:"varint,1,opt,name=chunkid,proto3" json:"chunkid,omitempty"`
	Chunknum             int32    `protobuf:"varint,2,opt,name=chunknum,proto3" json:"chunknum,omitempty"`
	Packet               []byte   `protobuf:"bytes,3,opt,name=packet,proto3" json:"packet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChunkData) Reset()         { *m = ChunkData{} }
func (m *ChunkData) String() string { return proto.CompactTextString(m) }
func (*ChunkData) ProtoMessage()    {}
func (*ChunkData) Descriptor() ([]byte, []int) {
	return fileDescriptor_chacomm_bfadd81b739bb8fc, []int{2}
}
func (m *ChunkData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChunkData.Unmarshal(m, b)
}
func (m *ChunkData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChunkData.Marshal(b, m, deterministic)
}
func (dst *ChunkData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChunkData.Merge(dst, src)
}
func (m *ChunkData) XXX_Size() int {
	return xxx_messageInfo_ChunkData.Size(m)
}
func (m *ChunkData) XXX_DiscardUnknown() {
	xxx_messageInfo_ChunkData.DiscardUnknown(m)
}

var xxx_messageInfo_ChunkData proto.InternalMessageInfo

func (m *ChunkData) GetChunkid() int32 {
	if m != nil {
		return m.Chunkid
	}
	return 0
}

func (m *ChunkData) GetChunknum() int32 {
	if m != nil {
		return m.Chunknum
	}
	return 0
}

func (m *ChunkData) GetPacket() []byte {
	if m != nil {
		return m.Packet
	}
	return nil
}

type PollQuery struct {
	Nonce                []byte   `protobuf:"bytes,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Identifier           []byte   `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PollQuery) Reset()         { *m = PollQuery{} }
func (m *PollQuery) String() string { return proto.CompactTextString(m) }
func (*PollQuery) ProtoMessage()    {}
func (*PollQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_chacomm_bfadd81b739bb8fc, []int{3}
}
func (m *PollQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PollQuery.Unmarshal(m, b)
}
func (m *PollQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PollQuery.Marshal(b, m, deterministic)
}
func (dst *PollQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PollQuery.Merge(dst, src)
}
func (m *PollQuery) XXX_Size() int {
	return xxx_messageInfo_PollQuery.Size(m)
}
func (m *PollQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_PollQuery.DiscardUnknown(m)
}

var xxx_messageInfo_PollQuery proto.InternalMessageInfo

func (m *PollQuery) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *PollQuery) GetIdentifier() []byte {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func init() {
	proto.RegisterType((*Message)(nil), "chacomm.Message")
	proto.RegisterType((*ChunkStart)(nil), "chacomm.ChunkStart")
	proto.RegisterType((*ChunkData)(nil), "chacomm.ChunkData")
	proto.RegisterType((*PollQuery)(nil), "chacomm.PollQuery")
}

func init() { proto.RegisterFile("chacomm.proto", fileDescriptor_chacomm_bfadd81b739bb8fc) }

var fileDescriptor_chacomm_bfadd81b739bb8fc = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x4f, 0x4f, 0x84, 0x30,
	0x10, 0xc5, 0x17, 0x0d, 0xcb, 0x32, 0xe2, 0xa5, 0x1a, 0x43, 0x8c, 0x31, 0x86, 0x93, 0xa7, 0x3d,
	0xac, 0xf1, 0x03, 0xf8, 0xe7, 0xb0, 0x17, 0x13, 0xad, 0x27, 0xbd, 0xd5, 0x32, 0xba, 0xcd, 0x42,
	0x8b, 0x50, 0x0e, 0xfa, 0xb1, 0xfc, 0x84, 0xa6, 0x23, 0x14, 0x30, 0xd9, 0x1b, 0x6f, 0xe6, 0xbd,
	0x37, 0x3f, 0x52, 0x38, 0x94, 0x1b, 0x21, 0x4d, 0x59, 0x2e, 0xab, 0xda, 0x58, 0xc3, 0xa2, 0x4e,
	0x66, 0x3f, 0x01, 0x44, 0x0f, 0xd8, 0x34, 0xe2, 0x03, 0xd9, 0x35, 0x80, 0xdc, 0xb4, 0x7a, 0xdb,
	0x58, 0x51, 0xdb, 0x34, 0xb8, 0x08, 0x2e, 0x0f, 0x56, 0x47, 0xcb, 0x3e, 0x78, 0xe7, 0x56, 0xcf,
	0x6e, 0xb5, 0x9e, 0xf1, 0x91, 0x91, 0xad, 0x20, 0x26, 0x95, 0x0b, 0x2b, 0xd2, 0x3d, 0x4a, 0xb1,
	0x69, 0xea, 0x5e, 0x58, 0xb1, 0x9e, 0xf1, 0xc1, 0xe6, 0x32, 0x95, 0x29, 0x8a, 0xcf, 0x16, 0xeb,
	0xaf, 0x74, 0xff, 0x5f, 0xe6, 0xd1, 0x14, 0xc5, 0x93, 0xdb, 0xb8, 0x8c, 0xb7, 0xdd, 0x2e, 0x60,
	0x5e, 0x09, 0xb9, 0x45, 0x9b, 0xbd, 0x02, 0x0c, 0x34, 0xec, 0x18, 0x42, 0x6d, 0xb4, 0x44, 0x22,
	0x4e, 0xf8, 0x9f, 0x60, 0x29, 0x44, 0x74, 0x4e, 0xe5, 0xc4, 0x14, 0xf2, 0x5e, 0xb2, 0xb3, 0x8e,
	0xb7, 0x51, 0xdf, 0x48, 0xb7, 0x43, 0x3e, 0x0c, 0xb2, 0x17, 0x88, 0x3d, 0xf3, 0xb8, 0x24, 0x98,
	0x96, 0x9c, 0xc2, 0x82, 0x3e, 0x75, 0x5b, 0x76, 0xfd, 0x5e, 0xb3, 0x93, 0x1e, 0x94, 0xda, 0x13,
	0xde, 0x63, 0xdf, 0x40, 0xec, 0x7f, 0x6d, 0x07, 0xf5, 0x39, 0x80, 0xca, 0x51, 0x5b, 0xf5, 0xae,
	0xb0, 0xa6, 0xe2, 0x84, 0x8f, 0x26, 0x6f, 0x73, 0x7a, 0xbe, 0xab, 0xdf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x4f, 0x4b, 0x40, 0xe5, 0xcf, 0x01, 0x00, 0x00,
}
